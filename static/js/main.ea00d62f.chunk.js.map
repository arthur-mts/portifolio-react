{"version":3,"sources":["img/ifpb-vertical.png","img/profile_photo.jpeg","components/Info/index.js","components/Navbar/index.js","components/Projects/index.js","components/Academic/index.js","components/About/index.js","routes.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Info","className","src","profilePhoto","alt","href","Navbar","useState","scroll","setscroll","useEffect","window","addEventListener","isTop","scrollY","console","log","removeEventListener","to","Projects","Academic","ifpbLogo","About","mapTechs","Map","set","color","percent","map","tech","i","get","key","style","backgroundColor","width","exact","path","component","App","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ea00d62f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/ifpb-vertical.7bc6f199.png\";","module.exports = __webpack_public_path__ + \"static/media/profile_photo.72d83108.jpeg\";","import React from 'react';\r\nimport \"./style.css\";\r\n\r\n// import { Container } from './styles';\r\nimport { FaGithubAlt, FaFacebookSquare } from 'react-icons/fa';\r\nimport { MdEmail } from 'react-icons/md';\r\nimport profilePhoto from \"../../img/profile_photo.jpeg\"\r\n\r\nexport default function Info() {\r\n  return (\r\n\r\n    <div className=\"profile\">\r\n\r\n      <div className=\"profilePhoto\">\r\n        <img src={profilePhoto} alt=\"profile\" className=\"profilePhoto\" />\r\n      </div>\r\n      <div className=\"desc\">\r\n        <h3>\r\n          Arthur Mauricio\r\n      </h3>\r\n        <ul>\r\n\r\n          <li>\r\n            Cursando Engenharia da Computação pelo IFPB-CG.\r\n          </li>\r\n          <li>\r\n            Formado em TI pelo IFPB-Esperança.\r\n          </li>\r\n        </ul>\r\n\r\n        <p>\r\n          <FaGithubAlt />\r\n          <a href=\"https://github.com/punisher077\">https://github.com/punisher077</a>\r\n        </p>\r\n\r\n        <p>\r\n          <FaFacebookSquare />\r\n          <a href=\"https://www.facebook.com/arthurmtss\">https://www.facebook.com/arthurmtss</a>\r\n        </p>\r\n\r\n        <p>\r\n          <MdEmail />\r\n          <a href=\"mailto: arthur.mts@gmail.com\" >arthur.mts@gmail.com</a>\r\n        </p>\r\n\r\n      </div>\r\n\r\n\r\n\r\n    </div >\r\n\r\n  );\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n// import { Container } from './styles';\r\n\r\nimport './style.css';\r\n\r\n\r\nexport default function Navbar() {\r\n  const [scroll, setscroll] = useState(false);\r\n\r\n  useEffect(() => {\r\n    window.addEventListener('scroll', () => {\r\n      \r\n      const isTop = window.scrollY < 148;\r\n      if (isTop!== true) {\r\n        setscroll(true);\r\n      }\r\n      else {\r\n        setscroll(false);\r\n      }\r\n      console.log(scroll);\r\n    });\r\n\r\n    return () =>\r\n      window.removeEventListener('scroll');\r\n  }, []);\r\n\r\n\r\n\r\n\r\n  return (\r\n    <div className={scroll ? 'containerNav scrolled': 'containerNav'}>\r\n      <nav>\r\n        {/* <a href=\"https://www.w3schools.com/css/css_navbar.asp\">Experiência Academica</a>\r\n            <a href=\"https://github.com/punisher077/portifolio-ieee\">Projetos</a>\r\n            <a href=\"d\"> Stack e Linguagens conhecidas</a> */}\r\n        <NavLink className=\"navLink\" to=\"/\">\r\n          Experiência Academica\r\n              </NavLink>\r\n        <NavLink className=\"navLink\" to=\"/projetos\">\r\n          Projetos\r\n              </NavLink>\r\n        <NavLink className=\"navLink\" to=\"/about\">\r\n          Sobre mim\r\n              </NavLink>\r\n      </nav>\r\n      <hr />\r\n\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\n// import { Container } from './styles';\r\nimport './style.css';\r\n\r\nexport default function Projects() {\r\n    return (\r\n        <>\r\n            <ul className=\"repoList\">\r\n                <li>\r\n                    <h4>\r\n                        <a href=\"https://github.com/punisher077/beijo-de-moca\" className=\"mainLink\">\r\n                            beijo-de-moca</a>\r\n                    </h4>\r\n\r\n                    <p>Tem o objetivo de gerar interpreções sobre os gastos públicos suspeitos feitos por deputados e senadores com\r\n                    dados disponibilizados pelo Jarbas, um site onde é possível navegar pelos gastos e descobrir mais sobre cada suspeita, de maneira simples e descomplicada.</p>\r\n\r\n                    <ul className=\"techs\">\r\n                        <li>Pandas</li>\r\n                        <li>Analise de dados</li>\r\n                        <li>Python</li>\r\n\r\n                    </ul>\r\n                </li>\r\n\r\n\r\n                <li>\r\n                    <h4>\r\n                        <a href=\"https://github.com/punisher077/league-viwer\" className=\"mainLink\">\r\n                            league-viwer</a>\r\n                    </h4>\r\n                    <p>Um cliente para visualizar sua conta do League of Legends feito em Python para a o projeto da disciplina de Algoritmos. Salve seu login e verifique suas estatisticas em Summoners Rift e Howling Abyss.</p>\r\n\r\n                    <ul className=\"techs\">\r\n                        <li>Python</li>\r\n                        <li>Tkinter para o Frontend</li>\r\n                        <li>Riot Games API</li>\r\n                        <li>HTTP requests</li>\r\n                    </ul>\r\n                </li>\r\n\r\n                <li>\r\n                    <h4>\r\n                        <a href=\"https://github.com/punisher077/Escola\" className=\"mainLink\">\r\n                            Escola</a>\r\n                    </h4>\r\n\r\n                    <p>Projeto de gerenciamento de alunos, professores, matricula e disciplinas para a discipina de DAW (Desenvolvimento de aplicações WEB 2) do curso Técnico em Informatica. Um sistema WEB com autenticação, presistência no banco de dados e estilização.</p>\r\n\r\n                    <ul className=\"techs\">\r\n                        <li>Java</li>\r\n                        <li>JavaServer Faces</li>\r\n                        <li>Primefaces</li>\r\n                        <li>PostgreSQL</li>\r\n                        <li>Criptografia de senhas e autenticação</li>\r\n                    </ul>\r\n                </li>\r\n\r\n                <li>\r\n                    <h4>\r\n                        <a href=\"https://github.com/punisher077/ED-Repo\" className=\"mainLink\">\r\n                            ED-Repo</a>\r\n                    </h4>\r\n\r\n                    <p>Repositório para questões de Estrutura de Dados do segundo período de Engenharia de Computação</p>\r\n\r\n                    <ul className=\"techs\">\r\n                        <li>C</li>\r\n                    </ul>\r\n                </li>\r\n\r\n\r\n                <li>\r\n                    <h4>\r\n                        <a href=\"http://lattes.cnpq.br/8728826313945150\" className=\"mainLink\">\r\n                            O PROBLEMA DA PRIVACIDADE NA FILOSOFIA DA INFORMAÇÃO</a>\r\n                    </h4>\r\n\r\n                    <p>Projeto de pesquisa realizado no Campus Esperança orientado pelo professor Mestre <a href=\"http://lattes.cnpq.br/7291661662684268\"> Cleyton Leandro Galvão</a></p>\r\n\r\n                    <ul className=\"techs\">\r\n                        <li>\r\n\r\n                            I ENCONTRO INSTITUCIONAL MENTE, TECNOLOGIA INFORMAÇÃO. 2016</li>\r\n\r\n                        <li>\r\n                            SIMPIF-Simpósio de Pesquisa, Inovação e Pós-Graduação.\r\n                        </li>\r\n\r\n                        <li>\r\n\r\n                            II Semana do Meio Ambiente do IFPB Campus Esperança. 2017\r\n                        </li>\r\n                    </ul>\r\n                </li>\r\n\r\n            </ul>\r\n        </>\r\n    );\r\n}\r\n","import React from 'react';\r\n\r\n// import { Container } from './styles';\r\nimport './style.css';\r\nimport ifpbLogo from '../../img/ifpb-vertical.png';\r\nexport default function Academic() {\r\n    return (\r\n        <div>\r\n            <ul className=\"listCursos\">\r\n                <li>\r\n                <img src={ifpbLogo} alt=\"IFPB\"  />\r\n\r\n                    <div className=\"infoCurso\">\r\n\r\n                        <p>\r\n                            <h3>Técnico em Informática</h3>\r\n                            <h4>2016 - 2018</h4>\r\n                        </p>\r\n\r\n                        <p>\r\n                            Desenvolve software, seguindo as especificações. Utiliza sistemas operacionais e bancos de\r\n                             dados. Realiza testes de software, mantendo registros que possibilitem análises e refinamento dos resultados. Executa manutenção de softwares já em produção. Utiliza métodos e técnicas de engenharia de software para uma melhor organização, produtividade e garantia de qualidade. Desenvolve software que fazem uso de bancos de dados, interfaces gráficas e arquitetura cliente/servidor. Apoia atividades de treinamento e de suporte de software ao usuário.\r\n                        </p>\r\n                    </div>\r\n\r\n\r\n                </li>\r\n\r\n                <li>\r\n                <img src={ifpbLogo} alt=\"IFPB\"  />\r\n\r\n                    <div className=\"infoCurso\">\r\n                        <p>\r\n                            <h3>Engenharia de Computação</h3>\r\n                            <h4>2019 - Hoje</h4>\r\n                        </p>\r\n\r\n                        <p>\r\n                        O Bacharel em Engenharia de Computação ou Engenheiro de Computação atua na área de sistemas computacionais, seus respectivos equipamentos, programas e inter-relações. Em sua atividade, otimiza, planeja, projeta, especifica, adapta, instala, mantém e opera sistemas computacionais. Integra recursos físicos e lógicos necessários para o desenvolvimento de sistemas, equipamentos e dispositivos computacionais, tais como computadores, periféricos, equipamentos de rede, de telefonia celular, sistemas embarcados e equipamentos eletrônicos microprocessados e microcontrolados. Coordena e supervisiona equipes de trabalho; realiza pesquisa científica e tecnológica e estudos de viabilidade técnico-econômica; executa e fiscaliza obras e serviços técnicos; efetua vistorias, perícias e avaliações, emitindo laudos e pareceres. Em sua atuação, considera a ética, a segurança e os impactos sócio-ambientais.\r\n                        </p>\r\n                    </div>\r\n\r\n\r\n                </li>\r\n            </ul>\r\n        </div >\r\n    );\r\n}\r\n","import React from 'react';\r\n\r\n// import { Container } from './styles';\r\nimport './style.css';\r\nexport default function About() {\r\n\r\n  //const [colorProp, setColorProp] = useEffect();\r\n  //const [percentProp, setPercentProp] = useEffect();\r\n  const mapTechs = new Map();\r\n  const techs = [\"JavaScript\", \"Java\",\"Python\",\"Banco de Dados\",\"HTML\",\"NodeJS\",\"Linux\",\"Git/GitHub\"];\r\n\r\n  mapTechs.set(\"NodeJS\", {color: \"#8CC84C\", percent: 60});\r\n  mapTechs.set(\"JavaScript\", {color: \"#F7E018\", percent: 60});\r\n  mapTechs.set(\"Python\",{color: \"#3775A8\", percent: 70});\r\n  mapTechs.set(\"Java\",{color: \"#E82D2F\", percent: 80});\r\n  mapTechs.set(\"HTML\",{color: \"#EA6228\", percent: 50});\r\n  mapTechs.set(\"Linux\",{color: \"#E53B00\", percent: 90});\r\n  mapTechs.set(\"Banco de Dados\",{color: \"#32648D\", percent: 60});\r\n  mapTechs.set(\"Git/GitHub\",{color: \"#E94D32\", percent: 80});\r\n\r\n\r\n  return (\r\n    <div className=\"aboutMe\">\r\n      <p>\r\n        Meu nome é Arthur Mauricio Thomaz Soares, tenho 17 anos e estou no mundo da computação/informática desde 2016. Sou Técnico em Informática pelo IFPB Campus Esperança e ingressei no curso de Engenharia de Computação no presente ano de 2019. Curto programação WEB desde lá, porem sempre foquei na parte do BackEnd. Além disso, tenho experiência com C, Java, Python e algumas de suas respectivas tecnologias. Em resumo, um estudante buscando experiências e agregar conhecimento.\r\n      </p>\r\n\r\n      <h2>Habilidades</h2>\r\n      <ul>\r\n        {techs.map((tech,i) => {\r\n          const {color, percent} = mapTechs.get(tech);\r\n          console.log(color, percent);\r\n          //setColorProp(color);\r\n          //setPercentProp(percent);\r\n          return(\r\n           <li key={i}>\r\n           <div className=\"bar\">\r\n             <div className=\"progress\" style={{backgroundColor: color, width: `${percent}%`}}></div>\r\n           </div>\r\n           <p>\r\n             {tech}\r\n           </p>\r\n         </li>\r\n          )\r\n        })}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n","import { Switch, Route } from 'react-router-dom';\r\nimport React from 'react';\r\nimport Projects from './components/Projects';\r\nimport Academic from './components/Academic'; \r\nimport About from './components/About';\r\nexport default () => (\r\n    <Switch>\r\n      <Route exact path=\"/\" component={Academic} />\r\n      <Route path=\"/projetos\" component={Projects} />\r\n      <Route path=\"/about\" component={About} />\r\n    </Switch>\r\n)","import React from 'react';\r\nimport './App.css';\r\n\r\nimport Info from './components/Info';\r\nimport Navbar from './components/Navbar';\r\n\r\nimport Router from './routes';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Navbar />\r\n\r\n      <div className=\"content\">\r\n        <Info />\r\n        <Router/>\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n// https://github.com/artenks/gympoint/tree/master/web","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { BrowserRouter } from 'react-router-dom'\r\n\r\nReactDOM.render(\r\n    (<BrowserRouter>\r\n         <App />\r\n    </BrowserRouter>), document.getElementById('root'));\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}